{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","isFirstPage","isLastPage","pages","className","cn","disabled","type","onClick","map","page","active","items","perPageValues","defaultSearchParams","String","App","useSearchParams","searchParams","setSearchParams","length","Number","get","maxPages","fromIndex","toIndex","itemsOnPage","slice","useEffect","set","includes","id","value","onChange","event","target","perPageValue","htmlFor","item","router","createHashRouter","path","element","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.c9fa3386.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface PaginationProps {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}: PaginationProps) => {\n  const firstPage = 1;\n  const lastPage = Math.ceil(total / perPage);\n  const isFirstPage = currentPage === firstPage;\n  const isLastPage = currentPage === lastPage;\n  const pages = getNumbers(firstPage, lastPage);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: isFirstPage,\n        })}\n      >\n        <button\n          data-cy=\"prevLink\"\n          aria-disabled={isFirstPage}\n          type=\"button\"\n          className=\"page-link\"\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </button>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={cn('page-item', {\n            active: page === currentPage,\n          })}\n        >\n          <button\n            data-cy=\"pageLink\"\n            type=\"button\"\n            className=\"page-link\"\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </button>\n        </li>\n      ))}\n      <li\n        className={cn('page-item', {\n          disabled: isLastPage,\n        })}\n      >\n        <button\n          data-cy=\"nextLink\"\n          aria-disabled={isLastPage}\n          type=\"button\"\n          className=\"page-link\"\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </button>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport { useSearchParams } from 'react-router-dom';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\nconst perPageValues = [3, 5, 10, 20];\nconst defaultSearchParams = {\n  page: '1',\n  perPage: String(perPageValues[1]),\n};\n\nexport const App: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams(defaultSearchParams);\n\n  const total = items.length;\n  const currentPage = Number(searchParams.get('page'));\n  const perPage = Number(searchParams.get('perPage'));\n  const maxPages = Math.ceil(total / perPage);\n\n  const fromIndex = currentPage * perPage - perPage;\n  const toIndex = currentPage === maxPages ? total : currentPage * perPage;\n  const itemsOnPage = items.slice(fromIndex, toIndex);\n\n  useEffect(() => {\n    if (currentPage < 1) {\n      searchParams.set('page', defaultSearchParams.page);\n    }\n\n    if (currentPage > maxPages) {\n      searchParams.set('page', `${maxPages}`);\n    }\n\n    if (perPage === 0 || !perPageValues.includes(perPage)) {\n      searchParams.set('perPage', defaultSearchParams.perPage);\n    }\n\n    setSearchParams(searchParams);\n  }, [searchParams]);\n\n  const onPerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    searchParams.set('perPage', event.target.value);\n    searchParams.set('page', defaultSearchParams.page);\n    setSearchParams(searchParams);\n  };\n\n  const onPageChange = (page: number) => {\n    if (page !== currentPage) {\n      searchParams.set('page', String(page));\n      setSearchParams(searchParams);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${fromIndex + 1} - ${toIndex} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={onPerPageChange}\n          >\n            {perPageValues.map(perPageValue => (\n              <option\n                key={perPageValue}\n                value={perPageValue}\n              >\n                {perPageValue}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={Number(searchParams.get('perPage'))}\n        currentPage={Number(searchParams.get('page'))}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {itemsOnPage.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import { createRoot } from 'react-dom/client';\nimport { createHashRouter, RouterProvider } from 'react-router-dom';\nimport { App } from './App';\n\nconst router = createHashRouter([\n  {\n    path: '/',\n    element: <App />,\n  },\n]);\n\nconst element = document.getElementById('root');\n// eslint-disable-next-line\nconst root = createRoot(element!);\n\nroot.render(\n  <RouterProvider router={router} />,\n);\n"],"sourceRoot":""}